# ===========================================
# Overwrites the docker-compose.yml file (Production Mode).
#
# @author Björn Hempel <bjoern@hempel.li>
# @version 1.0 (2024-01-23)
# ===========================================

# ===========================================
# Start app (Production + Traefik):
# ----------
# ❯ docker-compose -f docker-compose.yml -f docker-compose.production.yml up -d
#
# Show containers:
# ----------------
# ❯ docker container ls
#
# Build images:
# -------------
# ❯ docker-compose -f docker-compose.yml -f docker-compose.production.yml build
#
# Show logs:
# ----------------
# ❯ docker-compose -f docker-compose.yml -f docker-compose.production.yml logs -f
#
# Login into containers:
# ----------------------
# ❯ docker-compose -f docker-compose.yml -f docker-compose.production.yml exec nginx bash
# ❯ docker-compose -f docker-compose.yml -f docker-compose.production.yml exec php bash
#
# Open app (local - localhost):
# -----------------
#
# - https://location.twelvepics.com/
#
# Restart containers:
# -------------------
# ❯ docker-compose -f docker-compose.yml -f docker-compose.production.yml restart
#
# Shutdown containers:
# --------------------
# ❯ docker-compose -f docker-compose.yml -f docker-compose.production.yml down
#
# Installation:
# -------------
# ❯ docker-compose -f docker-compose.yml -f docker-compose.production.yml up -d
# ❯ docker-compose -f docker-compose.yml -f docker-compose.production.yml exec php composer install
#
# ===========================================

version: "3.8"

# Configures the services
services:

  # PHP FPM 8.2.1 and apache to serve the app
  php:
    networks:
      - network-internal
      - network-traefik
    labels:
      # enable traefik
      - "traefik.enable=true"
      # middleware -> https redirect
      - "traefik.http.middlewares.${NAMESPACE_UNDERLINE}_https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.${NAMESPACE_UNDERLINE}_frame.headers.customFrameOptionsValue=sameorigin"
      # middleware -> remove headers
      - "traefik.http.middlewares.${NAMESPACE_UNDERLINE}_remove_headers.headers.customResponseHeaders.Server="
      - "traefik.http.middlewares.${NAMESPACE_UNDERLINE}_remove_headers.headers.customResponseHeaders.X-Powered-By="
      # services (load balancer)
      - "traefik.http.services.${NAMESPACE_UNDERLINE}_https_lb.loadbalancer.server.port=${PORT_HTTPS}"
      - "traefik.http.services.${NAMESPACE_UNDERLINE}_https_lb.loadbalancer.server.scheme=https"
      # http layer -> redirect https
      - "traefik.http.routers.${NAMESPACE_UNDERLINE}_http.entrypoints=web"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE}_http.rule=Host(`${URL_PRODUCTION}`)"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE}_http.middlewares=${NAMESPACE_UNDERLINE}_https"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE}_http.service=${NAMESPACE_UNDERLINE}_https_lb"
      # https layer
      - "traefik.http.routers.${NAMESPACE_UNDERLINE}_https.entrypoints=websecure"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE}_https.rule=Host(`${URL_PRODUCTION}`)"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE}_https.middlewares=${NAMESPACE_UNDERLINE}_frame,${NAMESPACE_UNDERLINE}_remove_headers"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE}_https.service=${NAMESPACE_UNDERLINE}_https_lb"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE}_https.tls=true"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE}_https.tls.certresolver=letsencryptresolver"
      # network
      - "traefik.docker.network=${NETWORK_NAME_TRAEFIK_PUBLIC_PRODUCTION}"

  # PostgreSQL 14.7
  postgresql:
    networks:
      - network-internal

  # Adminer MySQL Client
  adminer:
    networks:
      - network-internal

  # Maildev
  maildev:
    networks:
      - network-internal

# configure networks
networks:
  network-traefik:
    external: true
    name: "${NETWORK_NAME_TRAEFIK_PUBLIC_PRODUCTION}"
  network-internal:
    external: false
    name: "${NAMESPACE_HOSTNAME}.network.internal"
